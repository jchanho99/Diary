name: PR Commit Notifier

on:
  pull_request:
    types: [opened, reopened, synchronize, closed] # closed 이벤트 추가

jobs:
  notify-pr-events: # Job 이름을 좀 더 일반적인 'notify-pr-events'로 변경
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Dump GitHub Event Context
        run: |
          echo "github.event:"
          echo "${{ toJSON(github.event) }}"
          echo "github.event.pull_request exists: ${{ github.event.pull_request != null }}"
          # Optionally, if you suspect it's not a PR event, dump event name
          echo "github.event_name: ${{ github.event_name }}"
        # Add a condition to run this step only if the pull_request object is NOT found
        # to focus on the problem runs
        if: github.event.pull_request == null
      
      - name: Send Discord Notification for PR Events
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (!github.event || !github.event.pull_request) {
              console.log("github.event or github.event.pull_request is missing. Exiting.");
              // Optionally log the full event object to debug what's coming in
              // console.log(JSON.stringify(github.event, null, 2));
              return; // Exit the script gracefully
            }
            const pr = github.event.pull_request;
            const action = github.event.action; // 이벤트 액션 가져오기

            let messageTitle = "";
            let messageContent = "";
            let discordColor = "";
            let commitMessages = ""; // 커밋 메시지 변수 초기화

            if (action === 'opened' || action === 'reopened' || action === 'synchronize') {
                // PR이 열리거나 다시 열리거나 업데이트되었을 때 (기존 로직 유지)
                messageTitle = `🎉 New Pull Request opened!`;
                discordColor = 65280; // 초록색 (RGB 0, 255, 0)

                const owner = github.repository.owner.login;
                const repo = github.event.repository.name;
                const prNumber = pr.number;

                const { data: commits } = await github.rest.pulls.listCommits({
                  owner,
                  repo,
                  pull_number: prNumber,
                  per_page: 5 
                });

                if (commits.length > 0) {
                  commitMessages = "--- Commits ---\n";
                  commits.forEach(commit => {
                    commitMessages += `- ${commit.commit.message.split('\n')[0].trim()}\n`;
                  });
                  if (pr.commits > commits.length) {
                    commitMessages += `... and ${pr.commits - commits.length} more commits.\n`;
                  }
                } else {
                  commitMessages = "No commits found in this PR.\n";
                }

                messageContent = `
                ---
                **Repository:** ${github.repository.full_name}
                **PR Title:** **${pr.title}**
                **Author:** @${pr.user.login}
                **Link:** ${pr.html_url}
                
                ${commitMessages}
                `;

            } else if (action === 'closed') {
                // PR이 닫혔을 때의 알림 로직
                if (pr.merged) {
                    messageTitle = `Pull Request Merged`;
                    discordColor = 3066993; // 녹색 (Merged)
                    messageContent = `
                    ---
                    **Repository:** ${github.repository.full_name}
                    **PR Title:** **${pr.title}**
                    **Merged by:** @${pr.merged_by ? pr.merged_by.login : 'Unknown'}
                    **Link:** ${pr.html_url}
                    `;
                } else {
                    messageTitle = `Pull Request Closed (Rejected)!`;
                    discordColor = 15548997; // 빨간색 (Closed without merge)
                    messageContent = `
                    ---
                    **Repository:** ${github.repository.full_name}
                    **PR Title:** **${pr.title}**
                    **Closed by:** @${pr.user.login}
                    **Link:** ${pr.html_url}
                    `;
                }
            } else {
                console.log(`Unhandled PR event action: ${action}`);
                return; // 다른 PR 이벤트는 알림 보내지 않음
            }

            const discordWebhookUrl = process.env.DISCORD_WEBHOOK_URL;
            if (!discordWebhookUrl) {
                console.log("DISCORD_WEBHOOK_URL secret is not set. Skipping Discord notification.");
                return;
            }
            
            await fetch(discordWebhookUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username: 'GitHub Actions Bot',
                    avatar_url: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png',
                    embeds: [{
                        title: messageTitle, // 동적으로 변경되는 제목
                        url: pr.html_url,
                        description: messageContent, // 동적으로 변경되는 내용
                        color: discordColor, // 동적으로 변경되는 색상
                        fields: [
                          {
                            name: "Author",
                            value: `@${pr.user.login}`,
                            inline: true
                          },
                          {
                            name: "State", // PR 상태 필드 추가
                            value: pr.state === 'closed' ? (pr.merged ? 'Merged' : 'Closed') : 'Open',
                            inline: true
                          }
                        ],
                        footer: {
                          text: `PR #${pr.number} in ${github.repository.name}`
                        },
                        timestamp: new Date().toISOString()
                    }]
                })
            });
