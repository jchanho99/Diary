name: PR Commit Notifier

on:
  pull_request:
    types: [opened, reopened, closed] # PRÏù¥ Ïó¥Î¶¨Í±∞ÎÇò, Îã§Ïãú Ïó¥Î¶¨Í±∞ÎÇò, ÏóÖÎç∞Ïù¥Ìä∏Îê† Îïå

jobs:
  notify-pr-commits:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR Commits and Send Discord Notification
        # PRÏù¥ Ïó¥Î†∏ÏùÑ ÎïåÎßå ÏïåÎ¶ºÏùÑ Î≥¥ÎÇ¥ÎèÑÎ°ù Ï°∞Í±¥ÏùÑ Ï∂îÍ∞ÄÌï©ÎãàÎã§.
        # synchronize Ïù¥Î≤§Ìä∏ÏóêÏÑúÎèÑ Î™®Îì† Ïª§Î∞ãÏùÑ Î≥¥ÎÇº ÌïÑÏöîÍ∞Ä ÏóÜÎã§Î©¥ 'opened'Î°ú Ï†úÌïúÌïòÎäî Í≤ÉÏù¥ Ï¢ãÏäµÎãàÎã§.
        if: github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened')
        uses: actions/github-script@v6 # GitHub API Ìò∏Ï∂úÏùÑ ÏúÑÌïú Ïï°ÏÖò
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }} # GitHub ActionsÏóêÏÑú Ï†úÍ≥µÌïòÎäî Í∏∞Î≥∏ ÌÜ†ÌÅ∞
          script: |
            const pr = github.event.pull_request;
            const owner = github.repository.owner.login;
            const repo = github.event.repository.name;
            const prNumber = pr.number;

            let commitMessages = "";
            let commitCount = 0;

            // GitHub APIÎ•º Ìò∏Ï∂úÌïòÏó¨ PRÏóê Ïó∞Í≤∞Îêú Ïª§Î∞ã Î™©Î°ùÏùÑ Í∞ÄÏ†∏ÏòµÎãàÎã§.
            const { data: commits } = await github.rest.pulls.listCommits({
              owner,
              repo,
              pull_number: prNumber,
              per_page: 5 // ÏµúÎåÄ 5Í∞ú Ïª§Î∞ãÎßå ÌëúÏãúÌïòÎèÑÎ°ù Ï†úÌïú (ÎÑàÎ¨¥ Í∏∏Ïñ¥ÏßÄÎäî Í≤ÉÏùÑ Î∞©ÏßÄ)
            });

            if (commits.length > 0) {
              commitMessages = "--- Commits ---\n";
              commits.forEach(commit => {
                commitMessages += `- ${commit.commit.message.split('\n')[0].trim()}\n`; // Ï≤´ Ï§ÑÎßå Í∞ÄÏ†∏Ïò§Í∏∞
                commitCount++;
              });
              if (pr.commits > commits.length) {
                commitMessages += `... and ${pr.commits - commits.length} more commits.\n`;
              }
            } else {
              commitMessages = "No commits found in this PR.\n";
            }

            const discordWebhookUrl = process.env.DISCORD_WEBHOOK_URL;
            if (!discordWebhookUrl) {
                console.log("DISCORD_WEBHOOK_URL secret is not set. Skipping Discord notification.");
                return;
            }

            const messageContent = `
            üéâ **New Pull Request opened!** üéâ
            ---
            **Repository:** ${github.repository.full_name}
            **PR Title:** **${pr.title}**
            **Author:** @${pr.user.login}
            **Link:** ${pr.html_url}
            
            ${commitMessages}
            `;

            // Discord ÏõπÌõÖÏúºÎ°ú ÏïåÎ¶º Î≥¥ÎÇ¥Í∏∞
            await fetch(discordWebhookUrl, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    username: 'GitHub Actions Bot',
                    avatar_url: 'https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png',
                    embeds: [{
                        title: pr.title,
                        url: pr.html_url,
                        description: messageContent,
                        color: 65280, // Ï¥àÎ°ùÏÉâ (RGB 0, 255, 0)
                        fields: [
                          {
                            name: "Author",
                            value: `@${pr.user.login}`,
                            inline: true
                          },
                          {
                            name: "Commits",
                            value: `${pr.commits}`,
                            inline: true
                          }
                        ],
                        footer: {
                          text: `PR #${pr.number} in ${github.repository.name}`
                        },
                        timestamp: new Date().toISOString()
                    }]
                })
            });
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }} # SecretÏúºÎ°ú Îì±Î°ùÎêú ÏõπÌõÖ URL
